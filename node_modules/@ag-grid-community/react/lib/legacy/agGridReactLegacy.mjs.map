{"version":3,"sources":["legacy/agGridReactLegacy.ts"],"names":[],"mappings":"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","file":"agGridReactLegacy.mjs","sourcesContent":["import {\n    BaseComponentWrapper,\n    ColumnApi,\n    ComponentType,\n    ComponentUtil,\n    FrameworkComponentWrapper,\n    Grid,\n    GridApi,\n    GridOptions,\n    WrappableInterface, _\n} from '@ag-grid-community/core';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { LegacyReactComponent } from './legacyReactComponent';\nimport { AgGridReactProps } from '../shared/interfaces';\nimport { NewReactComponent } from '../shared/newReactComponent';\nimport { LegacyPortalManager } from '../shared/portalManager';\nimport { ReactFrameworkOverrides } from '../shared/reactFrameworkOverrides';\n\nexport class AgGridReactLegacy<TData = any> extends Component<AgGridReactProps<TData>, {}> {\n\n    private static MAX_COMPONENT_CREATION_TIME_IN_MS: number = 1000; // a second should be more than enough to instantiate a component\n\n    static propTypes: any;\n\n    static defaultProps = {\n        legacyComponentRendering: false,\n        disableStaticMarkup: false,\n        maxComponentCreationTimeMs: AgGridReactLegacy.MAX_COMPONENT_CREATION_TIME_IN_MS\n    };\n\n    gridOptions!: GridOptions<TData>;\n\n    api: GridApi<TData> | null = null;\n    columnApi!: ColumnApi;\n\n    portalManager: LegacyPortalManager;\n\n    destroyed = false;\n\n    protected eGridDiv!: HTMLElement;\n\n    readonly SYNCHRONOUS_CHANGE_PROPERTIES = ['context']\n\n    constructor(public props: AgGridReactProps<TData>) {\n        super(props);\n\n        this.portalManager = new LegacyPortalManager(this, props.componentWrappingElement, props.maxComponentCreationTimeMs);\n    }\n\n    render() {\n        return React.createElement('div', {\n            style: this.createStyleForDiv(),\n            className: this.props.className,\n            ref: (e: HTMLElement) => {\n                this.eGridDiv = e;\n            }\n        }, this.portalManager.getPortals());\n    }\n\n    createStyleForDiv() {\n        return {\n            height: '100%',\n            ...(this.props.containerStyle || {})\n        };\n    }\n\n    componentDidMount() {\n        const modules = this.props.modules || [];\n        const gridParams = {\n            providedBeanInstances: {\n                agGridReact: this,\n                frameworkComponentWrapper: new ReactFrameworkComponentWrapper(this, this.portalManager)\n            },\n            modules,\n            frameworkOverrides: new ReactFrameworkOverrides(false)\n        };\n\n        const gridOptions = this.props.gridOptions || {};\n        this.gridOptions = ComponentUtil.copyAttributesToGridOptions(gridOptions, this.props);\n\n        this.checkForDeprecations(this.props);\n\n        // don't need the return value\n        new Grid(this.eGridDiv, this.gridOptions, gridParams);\n\n        this.api = this.gridOptions.api!;\n        this.columnApi = this.gridOptions.columnApi!;\n\n        this.props.setGridApi!(this.api, this.columnApi);\n    }\n\n    private checkForDeprecations(props: any) {\n        if (props.rowDataChangeDetectionStrategy) {\n            _.doOnce(() => console.warn('AG Grid: Since v29 rowDataChangeDetectionStrategy has been deprecated. Row data property changes will be compared by reference via triple equals ===. See https://ag-grid.com/react-data-grid/react-hooks/'), 'rowDataChangeDetectionStrategy_Deprecation')\n        }\n    }\n\n    shouldComponentUpdate(nextProps: any) {\n        this.processPropsChanges(this.props, nextProps);\n\n        // we want full control of the dom, as AG Grid doesn't use React internally,\n        // so for performance reasons we tell React we don't need render called after\n        // property changes.\n        return false;\n    }\n\n    componentDidUpdate(prevProps: any) {\n        this.processPropsChanges(prevProps, this.props);\n    }\n\n    processPropsChanges(prevProps: any, nextProps: any) {\n        const changes = {};\n\n        this.extractGridPropertyChanges(prevProps, nextProps, changes);\n\n        this.processSynchronousChanges(changes);\n        this.processAsynchronousChanges(changes);\n    }\n\n    private extractGridPropertyChanges(prevProps: any, nextProps: any, changes: any) {\n        const debugLogging = !!nextProps.debug;\n\n        Object.keys(nextProps).forEach(propKey => {\n            if (ComponentUtil.ALL_PROPERTIES_SET.has(propKey as any)) {\n\n                if (prevProps[propKey] !== nextProps[propKey]) {\n                    if (debugLogging) {\n                        console.log(`agGridReact: [${propKey}] property changed`);\n                    }\n\n                    changes[propKey] = {\n                        previousValue: prevProps[propKey],\n                        currentValue: nextProps[propKey]\n                    };\n                }\n            }\n        });\n\n        ComponentUtil.EVENT_CALLBACKS.forEach(funcName => {\n            if (prevProps[funcName] !== nextProps[funcName]) {\n                if (debugLogging) {\n                    console.log(`agGridReact: [${funcName}] event callback changed`);\n                }\n\n                changes[funcName] = {\n                    previousValue: prevProps[funcName],\n                    currentValue: nextProps[funcName]\n                };\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        if (this.api) {\n            this.api.destroy();\n            this.api = null;\n        }\n\n        this.destroyed = true;\n        this.portalManager.destroy();\n    }\n\n    public isDisableStaticMarkup(): boolean {\n        return this.props.disableStaticMarkup === true;\n    }\n\n    public isLegacyComponentRendering(): boolean {\n        return this.props.legacyComponentRendering === true;\n    }\n\n    private processSynchronousChanges(changes: any): {} {\n        const asyncChanges = {...changes};\n        if (Object.keys(asyncChanges).length > 0) {\n            const synchronousChanges: { [key: string]: any } = {};\n            this.SYNCHRONOUS_CHANGE_PROPERTIES.forEach((synchronousChangeProperty: string) => {\n                if (asyncChanges[synchronousChangeProperty]) {\n                    synchronousChanges[synchronousChangeProperty] = asyncChanges[synchronousChangeProperty];\n                    delete asyncChanges[synchronousChangeProperty];\n                }\n            })\n\n            if(Object.keys(synchronousChanges).length > 0 && !!this.api) {\n                ComponentUtil.processOnChange(synchronousChanges, this.api)\n            }\n        }\n        return asyncChanges;\n    }\n\n    private processAsynchronousChanges(changes: {}) {\n        if (Object.keys(changes).length > 0) {\n            window.setTimeout(() => {\n                // destroyed?\n                if (this.api) {\n                    ComponentUtil.processOnChange(changes, this.api)\n                }\n            });\n        }\n    }\n}\n\nAgGridReactLegacy.propTypes = {\n    gridOptions: PropTypes.object\n};\n\naddProperties(ComponentUtil.EVENT_CALLBACKS, PropTypes.func);\naddProperties(ComponentUtil.BOOLEAN_PROPERTIES, PropTypes.bool);\naddProperties(ComponentUtil.STRING_PROPERTIES, PropTypes.string);\naddProperties(ComponentUtil.OBJECT_PROPERTIES, PropTypes.object);\naddProperties(ComponentUtil.ARRAY_PROPERTIES, PropTypes.array);\naddProperties(ComponentUtil.NUMBER_PROPERTIES, PropTypes.number);\naddProperties(ComponentUtil.FUNCTION_PROPERTIES, PropTypes.func);\n\nfunction addProperties(listOfProps: string[], propType: any) {\n    listOfProps.forEach(propKey => {\n        (AgGridReactLegacy as any)[propKey] = propType;\n    });\n}\n\nclass ReactFrameworkComponentWrapper extends BaseComponentWrapper<WrappableInterface> implements FrameworkComponentWrapper {\n\n    private readonly agGridReact!: AgGridReactLegacy;\n    private readonly portalManager!: LegacyPortalManager;\n\n    constructor(agGridReact: AgGridReactLegacy, portalManager: LegacyPortalManager) {\n        super();\n        this.agGridReact = agGridReact;\n        this.portalManager = portalManager;\n    }\n\n    createWrapper(UserReactComponent: { new(): any; }, componentType: ComponentType): WrappableInterface {\n        if (this.agGridReact.isLegacyComponentRendering())  {\n            return new LegacyReactComponent(UserReactComponent, this.agGridReact, this.portalManager, componentType);\n        } else {\n            return new NewReactComponent(UserReactComponent, this.portalManager, componentType);\n        }\n    }\n}\n"]}