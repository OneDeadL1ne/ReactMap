{"version":3,"sources":["indexApiTest.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAC3D,OAAO,EAAE,UAAU,EAAE,MAAM,kBAAkB,CAAC;AAE9C,OAAO,EAAE,wBAAwB,EAAE,MAAM,0CAA0C,CAAC;AACpF,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAC5C,OAAO,WAAW,MAAM,cAAc,CAAC;AAEvC,OAAO,uCAAuC,CAAC;AAC/C,OAAO,+CAA+C,CAAC;AAGvD,MAAM,GAAG,GAAG,GAAG,EAAE;IACb,MAAM,OAAO,GAAG,MAAM,CAAc,IAAI,CAAC,CAAC;IAC1C,MAAM,CAAC,OAAO,EAAE,SAAS,CAAC,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;IAElD,MAAM,CAAC,OAAO,CAAC,GAAG,QAAQ,CAAC;QACvB,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE;QACjD,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE;QAC/C,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE;KACtD,CAAC,CAAC;IACH,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,QAAQ,CAAC;QACnC,EAAE,KAAK,EAAE,MAAM,EAAE;QACjB,EAAE,KAAK,EAAE,OAAO,EAAE;QAClB,EAAE,KAAK,EAAE,OAAO,EAAE;KACrB,CAAC,CAAC;IAEH,SAAS,CAAC,GAAG,EAAE;QACX,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;IAC3B,CAAC,EAAE,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC,CAAA;IAExB,OAAO,CACH,6BAAK,SAAS,EAAC,iBAAiB,EAAC,KAAK,EAAE,EAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAC;QAC7D,oBAAC,WAAW,IACR,GAAG,EAAG,OAAO,EACb,OAAO,EAAG,OAAO,EACjB,UAAU,EAAE,OAAO,EACnB,OAAO,EAAE,CAAC,wBAAwB,CAAC,GAAI,CACzC,CACT,CAAC;AACN,CAAC,CAAC;AAEF,MAAM,IAAI,GAAG,UAAU,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAE,CAAC,CAAC;AAC1D,IAAI,CAAC,MAAM,CAAC,oBAAC,GAAG,OAAG,CAAC,CAAC","file":"indexApiTest.mjs","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport { ClientSideRowModelModule } from '@ag-grid-community/client-side-row-model';\nimport { AgGridReact } from './agGridReact';\nimport useGridApis from \"./useGridApi\";\n\nimport '@ag-grid-community/styles/ag-grid.css';\nimport '@ag-grid-community/styles/ag-theme-alpine.css';\n\n\nconst App = () => {\n    const gridRef = useRef<AgGridReact>(null);\n    const [gridApi, columnApi] = useGridApis(gridRef);\n\n    const [rowData] = useState([\n        { make: 'Toyota', model: 'Celica', price: 35000 },\n        { make: 'Ford', model: 'Mondeo', price: 32000 },\n        { make: 'Porsche', model: 'Boxster', price: 72000 }\n    ]);\n    const [colDefs, setColDefs] = useState([\n        { field: 'make' },\n        { field: 'model' },\n        { field: 'price' },\n    ]);\n\n    useEffect(() => {\n        console.log(gridApi);\n        console.log(columnApi);\n    }, [gridApi, columnApi])\n\n    return (\n        <div className=\"ag-theme-alpine\" style={{height: 400, width: 600}}>\n            <AgGridReact\n                ref={ gridRef }\n                rowData={ rowData }\n                columnDefs={colDefs}\n                modules={[ClientSideRowModelModule]} />\n        </div>\n    );\n};\n\nconst root = createRoot(document.getElementById('root')!);\nroot.render(<App />);\n"]}