{"version":3,"sources":["reactUi/agGridReactUi.tsx"],"names":[],"mappings":"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","file":"agGridReactUi.mjs","sourcesContent":["import {\n    BaseComponentWrapper, ComponentType,\n    ComponentUtil,\n    Context, CtrlsService, FrameworkComponentWrapper,\n    GridCoreCreator,\n    GridOptions,\n    GridParams,\n    WrappableInterface,\n    _\n} from '@ag-grid-community/core';\nimport React, {\n    useCallback, useEffect, useMemo,\n    useRef,\n    useState\n} from 'react';\nimport { AgReactUiProps } from '../shared/interfaces';\nimport { NewReactComponent } from '../shared/newReactComponent';\nimport { PortalManager } from '../shared/portalManager';\nimport { ReactFrameworkOverrides } from '../shared/reactFrameworkOverrides';\nimport GridComp from './gridComp';\n\nfunction debug(msg: string, obj?: any) {\n    // console.log(msg, obj);\n}\n\nexport const AgGridReactUi = <TData,>(props: AgReactUiProps<TData>) => {\n    const gridOptionsRef = useRef<GridOptions | null>(null);\n    const eGui = useRef<HTMLDivElement | null>(null);\n    const portalManager = useRef<PortalManager | null>(null);\n    const destroyFuncs = useRef<(() => void)[]>([]);\n    const whenReadyFuncs = useRef<(() => void)[]>([]);\n\n    //prevProps\n    const prevProps = useRef<AgReactUiProps<any>>(props);\n\n    const ready = useRef<boolean>(false);\n\n    const [context, setContext] = useState<Context | undefined>(undefined);\n\n    const checkForDeprecations = useCallback((props: any) => {\n        if (props.rowDataChangeDetectionStrategy) {\n            _.doOnce(\n                () =>\n                    console.warn(\n                        'AG Grid: Since v29 rowDataChangeDetectionStrategy has been deprecated. Row data property changes will be compared by reference via triple equals ===. See https://ag-grid.com/react-data-grid/react-hooks/'\n                    ),\n                'rowDataChangeDetectionStrategy_Deprecation'\n            );\n        }\n    }, []);\n\n    // Hook to enable Portals to be displayed via the PortalManager\n    const [, setPortalRefresher] = useState(0);\n\n    const setRef = useCallback((e: HTMLDivElement) => {\n        eGui.current = e;\n        if (!eGui.current) {\n\n            debug('AgGridReactUi.destroy');\n            destroyFuncs.current.forEach((f) => f());\n            destroyFuncs.current.length = 0;\n\n            return;\n        }\n\n        const modules = props.modules || [];\n\n        if (!portalManager.current) {\n            portalManager.current = new PortalManager(\n                () => setPortalRefresher((prev) => prev + 1),\n                props.componentWrappingElement,\n                props.maxComponentCreationTimeMs\n            );\n            destroyFuncs.current.push(() => {\n                portalManager.current?.destroy();\n                portalManager.current = null;\n            });\n        }\n\n        const gridParams: GridParams = {\n            providedBeanInstances: {\n                frameworkComponentWrapper: new ReactFrameworkComponentWrapper(portalManager.current),\n            },\n            modules,\n            frameworkOverrides: new ReactFrameworkOverrides(true),\n        };\n\n        gridOptionsRef.current = props.gridOptions || {};\n        gridOptionsRef.current = ComponentUtil.copyAttributesToGridOptions(gridOptionsRef.current, props);\n\n        checkForDeprecations(props);\n\n        const createUiCallback = (context: Context) => {\n            setContext(context);\n\n            destroyFuncs.current.push(() => {\n                context.destroy();\n            });\n\n            // because React is Async, we need to wait for the UI to be initialised before exposing the API's\n            const ctrlsService = context.getBean(CtrlsService.NAME) as CtrlsService;\n            ctrlsService.whenReady(() => {\n                debug('AgGridReactUi. ctlService is ready');\n\n                if (context.isDestroyed()) {\n                    return;\n                }\n\n                if (gridOptionsRef.current) {\n                    const api = gridOptionsRef.current.api;\n                    if (api) {\n                        if (props.setGridApi) {\n                            props.setGridApi(api, gridOptionsRef.current.columnApi!);\n                        }\n                    }\n                }\n            });\n        };\n\n        // this callback adds to ctrlsService.whenReady(), just like above, however because whenReady() executes\n        // funcs in the order they were received, we know adding items here will be AFTER the grid has set columns\n        // and data. this is because GridCoreCreator sets these between calling createUiCallback and acceptChangesCallback\n        const acceptChangesCallback = (context: Context) => {\n            const ctrlsService = context.getBean(CtrlsService.NAME) as CtrlsService;\n            ctrlsService.whenReady(() => {\n                debug('AgGridReactUi.acceptChangesCallback');\n                whenReadyFuncs.current.forEach((f) => f());\n                whenReadyFuncs.current.length = 0;\n                ready.current = true;\n            });\n        };\n\n        const gridCoreCreator = new GridCoreCreator();\n        gridCoreCreator.create(\n            eGui.current,\n            gridOptionsRef.current,\n            createUiCallback,\n            acceptChangesCallback,\n            gridParams\n        );\n\n    }, []);\n\n    const style = useMemo(() => {\n        return {\n            height: '100%',\n            ...(props.containerStyle || {}),\n        };\n    }, [props.containerStyle]);\n\n    const processWhenReady = useCallback((func: () => void) => {\n        if (ready.current) {\n            debug('AgGridReactUi.processWhenReady sync');\n            func();\n        } else {\n            debug('AgGridReactUi.processWhenReady async');\n            whenReadyFuncs.current.push(func);\n        }\n    }, []);\n\n    useEffect(() => {\n        const changes = {};\n        extractGridPropertyChanges(prevProps.current, props, changes);\n        prevProps.current = props;\n        processWhenReady(() => {\n            if (gridOptionsRef.current?.api) {\n                ComponentUtil.processOnChange(changes, gridOptionsRef.current.api)\n            }\n        });\n    }, [props]);\n\n    return (\n        <div style={style} className={props.className} ref={setRef}>\n            {context && !context.isDestroyed() ? <GridComp context={context} /> : null}\n            {portalManager.current?.getPortals() ?? null}\n        </div>\n    );\n};\n\nclass ReactFrameworkComponentWrapper\n    extends BaseComponentWrapper<WrappableInterface>\n    implements FrameworkComponentWrapper {\n    private readonly parent: PortalManager;\n\n    constructor(parent: PortalManager) {\n        super();\n        this.parent = parent;\n    }\n\n    createWrapper(UserReactComponent: { new(): any }, componentType: ComponentType): WrappableInterface {\n        return new NewReactComponent(UserReactComponent, this.parent as any, componentType);\n    }\n}\n\nfunction extractGridPropertyChanges(prevProps: any, nextProps: any, changes: any) {\n    const debugLogging = !!nextProps.debug;\n\n    Object.keys(nextProps).forEach((propKey) => {\n        if (ComponentUtil.ALL_PROPERTIES_SET.has(propKey as any)) {\n            if (prevProps[propKey] !== nextProps[propKey]) {\n                if (debugLogging) {\n                    console.log(` agGridReact: [${propKey}] property changed`);\n                }\n\n                changes[propKey] = {\n                    previousValue: prevProps[propKey],\n                    currentValue: nextProps[propKey],\n                };\n            }\n        }\n    });\n\n    ComponentUtil.EVENT_CALLBACKS.forEach((funcName) => {\n        if (prevProps[funcName] !== nextProps[funcName]) {\n            if (debugLogging) {\n                console.log(`agGridReact: [${funcName}] event callback changed`);\n            }\n\n            changes[funcName] = {\n                previousValue: prevProps[funcName],\n                currentValue: nextProps[funcName],\n            };\n        }\n    });\n}"]}